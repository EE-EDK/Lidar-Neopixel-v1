Doxyfile Configuration for Lidar GUI v2-5This file was generated to document a Python project.To generate the documentation, run 'doxygen' in the command linefrom the same directory as this file.#---------------------------------------------------------------------------Project related configuration options#---------------------------------------------------------------------------The name of the project. This will appear in the documentation header.PROJECT_NAME           = "Lidar GUI v2-5"A brief description of the project.PROJECT_BRIEF          = "GUI for the Lidar-RP2040 Project"The version or revision number of the project.PROJECT_NUMBER         = "2.5"The directory where the generated documentation will be written.If left blank, it will be the current directory.A relative path like 'docs' is recommended.OUTPUT_DIRECTORY       = doxygen_outputThe main language for the output.OUTPUT_LANGUAGE        = English#---------------------------------------------------------------------------Build related configuration options#---------------------------------------------------------------------------If the EXTRACT_ALL tag is set to YES, Doxygen will assume all entitiesin documentation are documented, even if no documentation is available.EXTRACT_ALL            = YESIf the EXTRACT_PRIVATE tag is set to YES, all private members of a classwill be included in the documentation.EXTRACT_PRIVATE        = YESIf the EXTRACT_STATIC tag is set to YES, all static members of a filewill be included in the documentation.EXTRACT_STATIC         = YESThis tag specifies the encoding of the source files that Doxygen parses.UTF-8 is standard for modern Python files.INPUT_ENCODING         = UTF-8#---------------------------------------------------------------------------Input files configuration#---------------------------------------------------------------------------The INPUT tag is used to specify the files and/or directories that containthe source code. Using '.' means the current directory.INPUT                  = .List of file patterns to match for source files.We are specifically looking for Python files.FILE_PATTERNS          = *.pyIf the RECURSIVE tag is set to YES, Doxygen will traverse subdirectoriesfor source files.RECURSIVE              = YES#---------------------------------------------------------------------------Python specific configuration#---------------------------------------------------------------------------Set this tag to YES to enable Doxygen's support for Python docstrings.This allows Doxygen to correctly parse comments formatted in thestandard Python docstring style.PYTHON_DOCSTRING       = YESWe are not documenting C, Java, Fortran, or VHDL, so we disable optimizationsfor those languages to ensure Python is handled correctly.OPTIMIZE_OUTPUT_FOR_C  = NOOPTIMIZE_OUTPUT_JAVA   = NOOPTIMIZE_FOR_FORTRAN   = NOOPTIMIZE_OUTPUT_VHDL   = NO#---------------------------------------------------------------------------HTML output configuration#---------------------------------------------------------------------------Set to YES to generate HTML documentation. This is the primary output format.GENERATE_HTML          = YESThe name of the directory for the HTML output, relative to OUTPUT_DIRECTORY.HTML_OUTPUT            = htmlIf the SOURCE_BROWSER tag is set to YES, a browsable version of thesource files will be included in the HTML output.SOURCE_BROWSER         = YESSetting INLINE_SOURCES to YES will include the source code directly withinthe documentation for functions and classes, which is very convenient.INLINE_SOURCES         = YES#---------------------------------------------------------------------------Diagram and graphing configuration (requires Graphviz)#---------------------------------------------------------------------------To generate diagrams, you must install Graphviz: https://graphviz.org/download/Ensure the 'dot' command from Graphviz is in your system's PATH.Set to YES if you have the 'dot' tool from Graphviz installed.HAVE_DOT               = YESIf HAVE_DOT is YES, you can set this to YES to generate call graphs.CALL_GRAPH             = YESIf HAVE_DOT is YES, you can set this to YES to generate caller graphs.CALLER_GRAPH           = YESThis will generate more visually appealing diagrams in a UML style.UML_LOOK               = YES#---------------------------------------------------------------------------LaTeX output configuration#---------------------------------------------------------------------------Set to NO to disable the generation of LaTeX output, which is typicallyused for creating PDFs. This saves time if you only need HTML.GENERATE_LATEX         = NO